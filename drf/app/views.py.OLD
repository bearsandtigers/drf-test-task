from django.http import HttpResponse, JsonResponse
from django.views.decorators.csrf import csrf_exempt
from rest_framework.parsers import JSONParser


from rest_framework import status
from rest_framework.decorators import api_view
from rest_framework.response import Response
from app.models import Workload, Credentials
from app.serializers import WorkloadSerializer, CredentialsSerializer


@csrf_exempt
@api_view(['GET', 'POST'])
def credentials_list(request):
    if request.method == 'GET':
        credentials = Credentials.objects.all()
        serializer = CredentialsSerializer(credentials, many=True)
        return Response(serializer.data)

    elif request.method == 'POST':
        serializer = CredentialsSerializer(request.data)
        if serializer.is_valid():
            serializer.save()
            return Response(serializer.data, status=status.HTTP_201_CREATED)
        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)
        
@csrf_exempt
@api_view(['GET', 'PUT', 'DELETE'])
def credentials_detail(request, pk):
    try:
        credentials = Credentials.objects.get(pk=pk)
    except Credentials.DoesNotExist:
        return Response(status=status.HTTP_404_NOT_FOUND)

    if request.method == 'GET':
        serializer = CredentialsSerializer(credentials)
        return Response(serializer.data)

    elif request.method == 'PUT':
        serializer = CredentialsSerializer(credentials, data=request.data)
        if serializer.is_valid():
            serializer.save()
            return Response(serializer.data)
        return Response(serializer.errors, status=status.HTTP_404_NOT_FOUND)

    elif request.method == 'DELETE':
        credentials.delete()
        return HttpResponse(status=status.HTTP_204_NO_CONTENT)

